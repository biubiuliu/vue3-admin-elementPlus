<script setup>
import { ref, computed } from 'vue'
import { useRouter, useRoute } from 'vue-router'
import { Bell, Fold, Expand } from '@element-plus/icons-vue'
import { getMenuRoutes, hasChildRoutes } from '../../router/config'

// 接收父组件传递的折叠状态和布局类型
const props = defineProps({
  isCollapse: {
    type: Boolean,
    default: false
  },
  layoutType: {
    type: String,
    default: 'sidebar'
  }
})

// 定义折叠事件
const emit = defineEmits(['toggleCollapse'])

const toggleSidebar = () => {
  emit('toggleCollapse')
}

const router = useRouter()
const route = useRoute()

// 从统一配置获取所有可见菜单项
const fullMenuItems = getMenuRoutes()

// 顶级菜单项（只显示父级）
const topMenuItems = fullMenuItems.map(item => ({
  path: item.path,
  name: item.title
}))

// 计算当前活动菜单
const activeMenu = computed(() => {
  // 从当前路径中提取顶级路径
  const pathParts = route.path.split('/')
  return pathParts.length > 1 ? `/${pathParts[1]}` : '/'
})

// 处理菜单点击，对于有子路由的菜单自动跳转到第一个子路由
const handleMenuClick = (menuPath) => {
  // 检查是否有子路由
  const hasChildren = hasChildRoutes(menuPath)
  
  if (hasChildren) {
    // 找到当前点击的菜单项
    const menuItem = fullMenuItems.find(item => item.path === menuPath)
    
    // 如果找到且有子菜单，跳转到第一个子菜单
    if (menuItem && menuItem.children && menuItem.children.length > 0) {
      router.push(menuItem.children[0].path)
    } else {
      // 直接跳转到当前路径
      router.push(menuPath)
    }
  } else {
    // 没有子菜单，直接跳转到当前路径
    router.push(menuPath)
  }
}

const userDropdownVisible = ref(false)
const user = ref({
  name: '管理员',
  avatar: 'https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png'
})

const handleCommand = (command) => {
  if (command === 'logout') {
    // 退出登录逻辑
    console.log('退出登录')
  } else if (command === 'profile') {
    // 个人资料逻辑
    console.log('查看个人资料')
  }
}
</script>

<template>
  <div class="header" :class="{ 'top-layout-header': layoutType === 'top' }">
    <!-- 侧边栏布局的头部 -->
    <template v-if="layoutType === 'sidebar'">
      <div class="left-area">
        <!-- 折叠按钮 -->
        <div class="toggle-btn" @click="toggleSidebar">
          <el-icon v-if="isCollapse"><Expand /></el-icon>
          <el-icon v-else><Fold /></el-icon>
        </div>
        
        <div class="breadcrumb">
          <el-breadcrumb separator="/">
            <el-breadcrumb-item :to="{ path: '/' }">首页</el-breadcrumb-item>
            <el-breadcrumb-item>仪表盘</el-breadcrumb-item>
          </el-breadcrumb>
        </div>
      </div>
    </template>
    
    <!-- 顶部布局的头部 -->
    <template v-else>
      <div class="top-menu">
        <el-menu
          :default-active="activeMenu"
          mode="horizontal"
          background-color="#fff"
          text-color="#606266"
          active-text-color="#409EFF"
        >
          <el-menu-item 
            v-for="item in topMenuItems" 
            :key="item.path" 
            :index="item.path"
            @click="handleMenuClick(item.path)"
          >
            {{ item.name }}
          </el-menu-item>
        </el-menu>
      </div>
    </template>
    
    <div class="right-menu">
      <div class="right-menu-item">
        <el-tooltip content="通知中心" placement="bottom">
          <el-badge :value="3" class="badge-item">
            <el-icon><Bell /></el-icon>
          </el-badge>
        </el-tooltip>
      </div>
      
      <el-dropdown @command="handleCommand">
        <div class="user-info">
          <el-avatar :size="32" :src="user.avatar" />
          <span class="user-name">{{ user.name }}</span>
        </div>
        <template #dropdown>
          <el-dropdown-menu>
            <el-dropdown-item command="profile">个人资料</el-dropdown-item>
            <el-dropdown-item command="logout">退出登录</el-dropdown-item>
          </el-dropdown-menu>
        </template>
      </el-dropdown>
    </div>
  </div>
</template>

<style scoped>
.header {
  height: 60px;
  padding: 0 20px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: #fff;
  box-shadow: 0 1px 4px rgba(0, 21, 41, 0.08);
}

.top-layout-header {
  padding: 0;
  box-shadow: none;
  flex: 1;
}

.left-area {
  display: flex;
  align-items: center;
}

.toggle-btn {
  margin-right: 15px;
  cursor: pointer;
  font-size: 18px;
}

.breadcrumb {
  display: inline-block;
}

.top-menu {
  flex: 1;
}

.right-menu {
  display: flex;
  align-items: center;
}

.right-menu-item {
  padding: 0 12px;
  cursor: pointer;
  font-size: 20px;
}

.badge-item {
  font-size: 16px;
}

.user-info {
  display: flex;
  align-items: center;
  cursor: pointer;
}

.user-name {
  margin-left: 8px;
  font-size: 14px;
}

/* 覆盖element-plus的样式 */
:deep(.el-menu--horizontal) {
  border-bottom: none;
}

:deep(.el-menu--horizontal > .el-menu-item) {
  height: 60px;
  line-height: 60px;
}
</style> 