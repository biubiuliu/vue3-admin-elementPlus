import { createRouter, createWebHistory } from 'vue-router'
import { getFormattedRoutes } from './config'
import { getToken, isTokenValid } from '@/utils/auth'

// 从配置文件获取格式化后的路由表
const routes = getFormattedRoutes()

const router = createRouter({
  history: createWebHistory(),
  routes
})

// 全局前置守卫
router.beforeEach((to, from, next) => {
  // 设置页面标题
  document.title = to.meta.title ? `${to.meta.title} - 管理系统` : '管理系统'
  
  // 判断是否需要登录权限
  if (to.meta.requiresAuth) {
    // 检查是否已登录并且token有效
    const token = getToken()
    
    if (token && isTokenValid()) {
      // token存在且有效，允许访问
      next()
    } else {
      // 未登录或token已过期，重定向到登录页
      next({ 
        path: '/login', 
        query: { 
          redirect: to.fullPath,
          expired: token ? '1' : '0' // 标记是否是因为过期导致的跳转
        } 
      })
    }
  } else {
    // 已登录用户访问登录页时，重定向到首页或上一个页面
    if (to.path === '/login' && getToken() && isTokenValid()) {
      // 如果是从其他页面重定向过来的，则返回原页面
      if (from.path !== '/' && from.name !== null) {
        next({ path: from.path })
      } else {
        // 否则跳转到首页
        next({ path: '/' })
      }
    } else {
      next()
    }
  }
})

export default router 